version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "ecommerce-build-dev"
    IMAGE_TAG: "latest"

phases:
  pre_build:
    commands:
      - echo "Starting pre-build phase..."
      - echo "Fetching AWS account ID..."
      - export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - echo "AWS_ACCOUNT_ID=${AWS_ACCOUNT_ID}"
      - echo "AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}"
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - echo "REPOSITORY_URI=$REPOSITORY_URI"
      - echo "Installing project dependencies via Makefile..."
      - make install

  build:
    commands:
      - echo "Running Linting..."
      - make lint

      - echo "Running Tests..."
      - make test

      - echo "Building Docker image..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Starting post-build phase..."
      - echo "Pushing Docker image to ECR..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Image push complete."
      - printf '[{"name":"ecommerce-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files:
    - '**/*'
  discard-paths: no

cache:
  paths:
    - '/root/.cache/pip'
